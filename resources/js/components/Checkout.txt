<template>
    <div class="container">
        <div class="row">
            <!-- offset-md-3 -->
            <div class="col-md-5 mr-5">
                <div class="order-box">
                    <img :src="product.image" :alt="product.name" class="img-fluid rounded">
                    <h2 class="title" v-html="product.name"></h2>
                    <p class="small-text text-muted float-left">RF {{product.price}}</p>
                    <p class="small-text float-right">Available units: {{product.units}}</p>
                    <br>
                    <hr>

                    <label class="row"><span class="col-md-2 float-left">Quantity: </span><input type="number" name="units" min="1" :max="product.units" class="col-md-2 float-left ml-2" v-model="quantity" @change="checkUnits"></label>
                </div>
                <br>
                
                <div>
                    <div v-if="!isLoggedIn">
                        <h2>You need to login to continue</h2>
                        <button class="col-md-4 btn btn-primary float-left" @click="login">Login</button>
                        <button class="col-md-4 btn btn-danger float-right" @click="register">Create an account</button>
                    </div>
                </div>
            </div>
            <div class="address col-md-5" v-if="isLoggedIn">
                <form  method="post">
                    <label class="col-md-4 col-form-label mb-3"><b>Delivery Address</b></label><br>
                    <label for="province" class="col-md-4 col-form-label">Province:</label>
                    <select id="province" v-model="province">
                        <option selected disabled>Provinces: </option>
                        <option v-for="province in provinces" v-bind:key="province" :value="province">{{ province }}</option>
                    </select><br>
                    <label for="district" class="col-md-4 col-form-label">District:</label>
                    <select id="district" v-model="district" @mouseover="loadDistricts">
                        <option selected disabled>Districts: </option>
                        <option v-for="district in districts" v-bind:key="district" :value="district">{{ district }}</option>
                    </select><br>
                    <label for="stNo" class="col-md-4 col-form-label">Street Number:</label>
                    <input type="text" v-model="streetNumber" id="stNo" class="col-sm-6 form-control ml-3" placeholder="KN 142st">

                    <label for="houseNo" class="col-md-4 col-form-label">House Number:</label>
                    <input type="text" v-model="houseNumber" id="houseNo" class="col-sm-6 form-control ml-3" placeholder="KN 142st 3">
                    
                <br>
                <!-- v-if="isLoggedIn" if needed -->
                <!-- <label for="address" class="col-md-4 col-form-label">Address:</label>
                <input type="text" id="address" v-model="address" class="col-sm-6 form-control ml-3" placeholder="Address" required> -->
                <button class="col-md-4 btn btn-sm btn-success float-left ml-3" @click="placeOrder">Continue</button>
                
                </form>
                
                    
            </div>
        </div>
    </div>
</template>

<script>
const { Provinces, Districts } = require('rwanda');
export default {
    props: ['pid', 'user_id'],
    data() {
        return {
            // address: [],
            address: [],
            isLoggedIn: null,
            quantity: 1,
            product: [],
            user: null,
            province: null,
            provinces: [],
            district: null,
            districts: [],
            streetNumber: "",
            houseNumber: ""
        }
    },
    mounted() {
        //checking authentication status
        this.isLoggedIn = localStorage.getItem('bigStore.jwt') != null;
        // this.user = JSON.parse(localStorage.getItem('bigStore.user'));
        this.provinces = Provinces();
    },
    beforeMount() {
        // let user_id = this.user.id;
        axios.get(`/api/products/${this.pid}`).then(response => this.product = response.data);
        // axios.get(`/api/users/${this.user_id}`).then(response => this.user = response.data);
        if(localStorage.getItem('bigStore.jwt') != null) {
            this.user = JSON.parse(localStorage.getItem('bigStore.user'));
            axios.defaults.headers.common['Content-Type'] = 'application/json';
            axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('bigStore.jwt');
        }
    },
    methods: {
        login() {
            this.$router.push({name: 'login', params: {nextUrl: this.$route.fullPath}});
        },
        register() {
            this.$router.push({name: 'register', params: {nextUrl: this.$route.fullPath}});
        },
        placeOrder(e) {
            e.preventDefault();
            // let address = this.address;
            // let product_id = this.product.id;
            // let quantity = this.quantity;
            // let user_id = this.user.id;

            // let province = this.province;
            // let district = this.district;
            // let stNo = this.streetNumber;
            // let houseNo = this.houseNumber;

            // axios.post('api/orders', {user_id,address, quantity, product_id})
            //     .then(response => this.$router.push('/confirmation'))
            //     .catch(error=> console.error(error))

            axios.post('api/address', {user_id, province, district, stNo, houseNo})
                // .then(response => this.$router.push('/confirmation'))
                .then((response) => {
                //     this.address = response.data
                    console.log(response.data);
                })
                .catch(error=> console.error(error))
        },
        checkUnits(e) {
            if(this.quantity > this.product.units) {
                this.quantity = this.product.units;
            }
        },
        //address
        loadDistricts: function() {
            this.districts = Districts(this.province);
        },
    },
}
</script>

<style scoped>
    .small-text { font-size: 18px; }
    .order-box { border: 1px solid #cccccc; padding: 10px 15px; }
    .title { font-size: 36px; }
    .address { border: 1px solid #cccccc; padding: 10px; margin-bottom: 3px;}
</style>